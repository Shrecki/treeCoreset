name: Build wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels (manylinux)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # Set up Python (this step is optional; cibuildwheel will use containerized Pythons)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install cibuildwheel so we can build manylinux wheels
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      # Build wheels using cibuildwheel in a manylinux container.
      # The CIBW_BEFORE_BUILD script runs inside the container and installs pybind11 from the submodule,
      # builds Boost, and builds ZeroMQ, installing them into /tmp/local.
      - name: Build wheels with cibuildwheel
        env:
          CIBW_BEFORE_BUILD: |
            # Build and install pybind11 from the submodule
            cd pybind11
            mkdir -p build && cd build
            cmake .. && make && make install
            cd ../..
            # Download, build, and install static Boost
            mkdir -p /tmp/deps
            cd /tmp/deps
            wget -q https://boostorg.jfrog.io/artifactory/main/release/1.79.0/source/boost_1_79_0.tar.gz
            tar xf boost_1_79_0.tar.gz
            cd boost_1_79_0
            ./bootstrap.sh --with-libraries=system,filesystem --prefix=/tmp/local
            ./b2 link=static install
            cd ..
            # Download, build, and install static ZeroMQ
            wget -q https://github.com/zeromq/libzmq/releases/download/v4.3.4/zeromq-4.3.4.tar.gz
            tar xf zeromq-4.3.4.tar.gz
            cd zeromq-4.3.4
            ./configure --enable-static --disable-shared --prefix=/tmp/local
            make -j4
            make install
          # Use a manylinux image with an older toolchain
          CIBW_BASE_IMAGE: quay.io/pypa/manylinux2010_x86_64
          # Pass the dependency install prefix to CMake
          CMAKE_PREFIX_PATH: /tmp/local
          BOOST_ROOT: /tmp/local
          ZeroMQ_ROOT: /tmp/local
        run: python -m cibuildwheel --output-dir wheelhouse

      # Upload the resulting wheels as artifacts
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheelhouse/*.whl
